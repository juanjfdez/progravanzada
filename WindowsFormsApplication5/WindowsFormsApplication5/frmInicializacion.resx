<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhzQBBAPcAAKqhcsS6g0lIRcauXMG1fNvSmmhlVpqMVdPKlKWdds26ctK9cqybW3dpOM3Ci5iW
        hi8pFmhbMb2yfKWRTaqVULKlbTs7Oa6ia8O7iqaiiVZUR6KOTMSxa9LDgpyUa7OpdIt6Qryzgr2mWKqc
        Y8KtY5SBRZaOZqiTT8zEkNrKhdC7bcm9hLOsg6ORVL2pY8+5as22ZrmiVicnJbSgW9vMioF9acm1bMuy
        YNjMkqKTWrCeXHlzV7SrfNTMmLGmcq6YUQICAtHFip2JScKqWoJyPRQUFL2xdnR0dIeGhaSabG1sa3Ft
        WEJCPbmmY9XCeZODTcS4faaZY8W2ds3AhGNjYbSeVLm1k7agVZuVcqOehH17c1ZLKFJRULmpary1idvU
        obGbU7iuemtqY2BdTaajkomBW72tba2ZVtXIjM2+frWobouFYtTAdbmtdoF5V+HWm7GcVpONccO+lqGV
        YcCpWnFxbb2ucbWlZV5eWp2QWtHAfmtlS8+9d4OBc7mqbFtaVcGuasm5eJSRfMmwXrmlXqmeacWwZsGx
        cNbFfjQzMcm3cZmGR7KcU7GgYLyrab2oXbmscsG3grChZnRxYI2LfoOAbse6fp6Zfb+ydriiWca1cdjG
        f3x6a7ajYNC/enp5eImEbePcqbSiYpqHSNLAepSQc5mVe0I8JY2IbHBuZrqkWsGrXomGdLWwjdjGgsK0
        d4SDfMy0Y66mfXl2ZJuakH56Ysu8fZeFRsqyX9TDfo6KcJqJTY9+Q8ixZMeuXbumXaqXVXl3aV9TLJ6N
        UJ2LTb6saZKRiY+ASk9FJce+iJ+YcoWBZnBiNE9MO8W/kLurbqKYa8u0ZtDJms7HlY+IZK+bVnd3c6aY
        X7uvd5+MSldWU7eqcb64jiAfHC4tKcu7eqCPUIqHeE5NScjAjMy8eK+rkHBrUciwXcSsW8CoWcSrW7uk
        V7ylV8uzYtfEe8GpWrenaLOkZ9DHkV1YQrejXd3QkMStXaeXWbiwg8e3eMO0dMSzcJaHUdfPmLardcqx
        XiwAAAAAzQBBAAAI/wD/CRxIsKDBgwdv3IgFA8YLFQsWsJlIsWJEFSpewIjV7gYuhCBDihxJsqTJkyhT
        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
        xQ0gu9q4BQQAOw==
</value>
  </data>
</root>